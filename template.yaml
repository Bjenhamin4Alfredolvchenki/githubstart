AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  EdgeFunction:
    Type: Custom::StackeryEdgeFunction
    Properties:
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:stackery-agent-commander
      FunctionName: !Sub ${AWS::StackName}-EdgeFunction
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: EdgeFunction
      CodeUri: src/EdgeFunction
      Handler: index.handler
      Runtime: nodejs12.x
      MemorySize: 128
      Timeout: 5
      Tracing: Active
      Role: !GetAtt EdgeFunctionRole.Arn
      Environment:
        Variables:
          DB_ADDRESS: !GetAtt Graphdb.Endpoint
          DB_ARN: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${Graphdb}
          DB_ID: !GetAtt Graphdb.ClusterResourceId
          DB_PORT: !GetAtt Graphdb.Port
  EdgeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-EdgeFunction
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
              - edgelambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      Policies:
        - PolicyName: AccessGraphdb
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - neptune-db:connect
                Resource: !Sub arn:aws:neptune-db:${AWS::Region}:${AWS::AccountId}:${Graphdb.ClusterResourceId}/*
  Graphdb:
    Type: AWS::Neptune::DBCluster
    Properties:
      BackupRetentionPeriod: 1
      DBSubnetGroupName: !Ref GraphdbSubnetGroup
      IamAuthEnabled: true
      StorageEncrypted: true
      KmsKeyId: alias/aws/rds
      VpcSecurityGroupIds:
        - !Ref GraphdbSecurityGroup
  GraphdbInstance:
    Type: AWS::Neptune::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier: !Ref Graphdb
      DBInstanceClass: db.r5.large
      DBSubnetGroupName: !Ref GraphdbSubnetGroup
  GraphdbSubnetGroup:
    Type: AWS::Neptune::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Subnets
        - ResourceName: Graphdb
      SubnetIds: !Ref DefaultVPCSubnets
      Tags:
        - Key: Name
          Value: !Sub
            - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Subnets
            - ResourceName: Graphdb
  GraphdbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        CidrIp: 0.0.0.0/0
        FromPort: 8182
        IpProtocol: tcp
        ToPort: 8182
      Tags:
        - Key: Name
          Value: !Sub
            - Stack ${StackTagName} Environment ${EnvironmentTagName} Database ${ResourceName} VPC Security Group
            - ResourceName: Graphdb
      VpcId: !Ref DefaultVPCId
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  DefaultVPCId:
    Type: AWS::EC2::VPC::Id
    Description: AWS account-specific default VPC ID (injected by Stackery at deployment time)
  DefaultVPCSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: AWS account-specific default VPC subnets (injected by Stackery at deployment time)